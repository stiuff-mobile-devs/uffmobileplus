import 'package:hive_flutter/hive_flutter.dart';
import 'package:uffmobileplus/app/modules/internal_modules/login/modules/iduff/data/models/auth_model.dart';
import 'package:uffmobileplus/app/modules/internal_modules/user/data/models/user_auth_model.dart';
import 'package:uffmobileplus/app/modules/internal_modules/user/data/models/user_umm_model.dart';

class HiveService {
  /// Initialize Hive + register all generated adapters.
  static Future<void> init() async {
    await Hive.initFlutter();

    // Adapters generated by build_runner (keep in sync if you regenerate).
    Hive.registerAdapter(AuthInformationModelAdapter());
    Hive.registerAdapter(UserAuthModelAdapter());

    // User UMM adapters
    Hive.registerAdapter(UserUmmModelAdapter());
    Hive.registerAdapter(GradAdapter());
    Hive.registerAdapter(MatriculasAdapter());
    Hive.registerAdapter(CurriculosAdapter());
    Hive.registerAdapter(IdentificacaoAdapter());
    Hive.registerAdapter(PosAdapter());
    Hive.registerAdapter(AlunosAdapter());
    Hive.registerAdapter(ActiveBondAdapter());
    Hive.registerAdapter(ObjectsAdapter());
    Hive.registerAdapter(OuterObjectAdapter());
    Hive.registerAdapter(UsuarioAdapter());
    Hive.registerAdapter(InnerObjectAdapter());
    Hive.registerAdapter(VinculacaoAdapter());
  }

  /// Convenience wrapper to open a box with a specific generic type.
  static Future<Box<T>> openBox<T>(String name) async {
    return await Hive.openBox<T>(name);
  }

  /// Close all open boxes.
  static Future<void> closeAll() async {
    await Hive.close();
  }
}
